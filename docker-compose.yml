version: '3'
services:

  #PHP Service
  app:
    build:
      context: laravel
      dockerfile: Dockerfile
      args:
        - USERNAME=$DB_USERNAME
    container_name: app
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./env:/var/www/env
      - ./laravel:/var/www
      - vendor:/var/www/vendor
      - node_modules:/var/www/node_modules
    networks:
      - app-network
    depends_on:
      - db

  #NodeJS - uncomment for websockets
  sockets:
    build:
      context: node
      dockerfile: Dockerfile
    container_name: sockets
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - app

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./laravel/:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
    depends_on:
      - db
      - app

  #MySQL Service
  db:
    build:
      context: mysql
      dockerfile: Dockerfile
      args:
        - USERNAME=$DB_USERNAME
        - SECRET=$DB_PASSWORD
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD
      MYSQL_DATABASE: $DB_DATABASE
      MYSQL_USER: $DB_USERNAME
      MYSQL_PASSWORD: $DB_PASSWORD
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql-files
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
    dbdata:
      driver: local
    vendor:
      driver: local
    node_modules:
      driver: local